# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Install and Tests

on:
  workflow_call:
    inputs:
      coverage_threshold:
        description: 'Minimum required test coverage percentage'
        required: false
        type: number
        default: 0
      localstack_profile_name:
        description: 'Builds specified localstack profile'
        required: false
        type: string
        default: ''
      use_pyright:
        description: "Does static checks with pyright if true"
        required: false
        type: boolean
        default: false
      optional_dependencies:
        description: "Specifies the optional dependencies to install for pytest"
        required: false
        type: string
        default: "[lint, test]"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Build specified localstack profile
      if: ${{ inputs.localstack_profile_name }}
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./docker-compose.yaml"
        compose-flags: "--profile ${{ inputs.localstack_profile_name }}"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .${{ inputs.optional_dependencies }}
    - name: Lint with ruff
      run: ruff check
    - name: Check format with ruff
      run: ruff format --check
    - name: Static type checking with pyright
      if: ${{ inputs.use_pyright }}
      uses: jakebailey/pyright-action@v2
    - name: Test with pytest
      run: |
        if [ "${{ inputs.coverage_threshold }}" -gt 0 ]; then
          pytest --cov-fail-under=${{ inputs.coverage_threshold }}
        else
          pytest
        fi



